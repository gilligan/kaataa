/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package mars.rover

import kotlin.test.Test
import kotlin.test.assertTrue
import kotlin.test.assertEquals

fun mkRover(x: Int, y: Int, dir: Dir) = Rover(pos = Pos(x,y), dir = dir)

class RoverTest {
    @Test
    fun `rover rotates left`() {
        assertTrue(mkRover(0, 0, Dir.N).rotateLeft() == mkRover(0, 0, Dir.W))
        assertTrue(mkRover(0, 0, Dir.S).rotateLeft() == mkRover(0, 0, Dir.E))
        assertTrue(mkRover(0, 0, Dir.E).rotateLeft() == mkRover(0, 0, Dir.N))
        assertTrue(mkRover(0, 0, Dir.W).rotateLeft() == mkRover(0, 0, Dir.S))
    }

    @Test
    fun `rover rotates right`() {
        assertEquals(mkRover(0, 0, Dir.N).rotateRight(), mkRover(0, 0, Dir.E))
        assertEquals(mkRover(0, 0, Dir.S).rotateRight(), mkRover(0, 0, Dir.W))
        assertEquals(mkRover(0, 0, Dir.E).rotateRight(), mkRover(0, 0, Dir.S))
        assertEquals(mkRover(0, 0, Dir.W).rotateRight(), mkRover(0, 0, Dir.N))
    }

    @Test
    fun `rover advances towards its direction`() {
        assertEquals(mkRover(0, 0, Dir.N).advance(), mkRover(0, 1, Dir.N))
        assertEquals(mkRover(0, 0, Dir.S).advance(), mkRover(0, -1, Dir.S))
        assertEquals(mkRover(0, 0, Dir.E).advance(), mkRover(1, 0, Dir.E))
        assertEquals(mkRover(0, 0, Dir.W).advance(), mkRover(-1, 0, Dir.W))
    }

    @Test
    fun `rover executes instructions` () {
        assertEquals(mkRover(0, 0, Dir.N).exec(Instruction.Left),
            mkRover(0, 0, Dir.W))

        assertEquals(mkRover(0, 0, Dir.N).exec(Instruction.Right),
            mkRover(0, 0, Dir.E))

        assertEquals(mkRover(0, 0, Dir.N).exec(Instruction.Move),
            mkRover(0, 1, Dir.N))
    }

    @Test
    fun `rover executes multiple commands` () {
        val instructions = listOf(Instruction.Move, Instruction.Move)
        val r = mkRover(0, 0, Dir.N).exec(instructions)
        val expected = mkRover(0, 2, Dir.N)

        assertEquals(r, expected)
    }
}
